name: Linters and Test

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  cache-and-install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
  lint-ts:
    name: Lint Ts code
    runs-on: ubuntu-latest
    needs: cache-and-install
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Runing linter
        run: pnpm lint
  run-tests:
    name: Runingn test coverage
    runs-on: ubuntu-latest
    needs: cache-and-install
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - name: Runing Coverage
        run: pnpm test:coverage
  run-fix-paths:
    name: Fix paths for SonarCloud
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: Cache test results
        uses: actions/cache@v2
        env:
          cache-name: cache-test-results
        with:
          path: ./coverage
          key: coverage-${{ github.sha }}-fixed
          restore-keys: coverage-${{ github.sha }}
      - name: fix code coverage paths
        working-directory: ./coverage
        run: |
          WIDGET_NAME=$(echo $GITHUB_REPOSITORY| sed -e 's/Giorgiosaud\///')
          WIDGET_PATH=$WIDGET_NAME/$WIDGET_NAME
          REPLACE_REGEX="s/\/home\/runner\/work\/"$(echo $WIDGET_PATH| sed -e 's/\//\\\//')"\///g"
          echo $REPLACE_REGEX
          cat sonar-cloud-reporter.xml
          sed -i $REPLACE_REGEX lcov.info
          sed -i $REPLACE_REGEX sonar-cloud-reporter.xml
          cat sonar-cloud-reporter.xml
  run-sonar-push:
    name: Sonar Cloud Analisys
    runs-on: ubuntu-latest
    needs: run-fix-paths
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - uses: actions/cache@v2
        id: restore-fixed-path
        with:
          path: ./coverage
          key: coverage-${{ github.sha }}-fixed
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}